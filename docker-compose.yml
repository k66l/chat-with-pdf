services:
  chat-with-pdf:
    build: .
    container_name: chat-with-pdf-app
    ports:
      - "8000:8000"
    environment:
      # Load from .env file
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - TAVILY_API_KEY=${TAVILY_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MAX_TOKENS=${MAX_TOKENS:-1000}
      - TEMPERATURE=${TEMPERATURE:-0.7}
      - VECTOR_STORE_PATH=${VECTOR_STORE_PATH:-./data/vectorstore}
      - PDF_STORAGE_PATH=${PDF_STORAGE_PATH:-./data/pdfs}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-models/text-embedding-004}
      - MAX_MEMORY_MESSAGES=${MAX_MEMORY_MESSAGES:-10}
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-8000}
    volumes:
      # Persist data across container restarts
      - ./data:/app/data
      - ./logs:/app/logs
      # Mount PDFs for easy access
      - ./data/pdfs:/app/data/pdfs:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - chat-with-pdf-network

  # Optional: Add Redis for session storage (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   container_name: chat-with-pdf-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - chat-with-pdf-network

networks:
  chat-with-pdf-network:
    driver: bridge

# Optional: Redis volume (uncomment if using Redis)
# volumes:
#   redis_data: 